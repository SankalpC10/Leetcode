2. Add Two Numbers
Medium
Example 1:
Input: l1 = [2,4,3], l2 = [5,6,4]
Output: [7,0,8]
Explanation: 342 + 465 = 807.
Example 2:

Input: l1 = [0], l2 = [0]
Output: [0]
Example 3:

Input: l1 = [9,9,9,9,9,9,9], l2 = [9,9,9,9]
Output: [8,9,9,9,0,0,0,1]
 

Constraints:

The number of nodes in each linked list is in the range [1, 100].
0 <= Node.val <= 9
It is guaranteed that the list represents a number that does not have leading zeros.


class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        if(!l1) return l2;
        if(!l2) return l1;
        int carry=(l1->val+l2->val)/10;
        ListNode *l3=new ListNode((l1->val+l2->val)%10);
        ListNode *head=l3;
        l1=l1->next;
        l2=l2->next;
        while(l1|| l2|| carry)
        {
            int sum=((l1?l1->val:0)+(l2?l2->val:0)+carry);
            ListNode *t=new ListNode(sum%10);
            carry=sum/10;
            if(l1) l1=l1->next;
            if(l2) l2=l2->next;
            l3->next=t;
            l3=t;
        }
        return head;
    }
};
